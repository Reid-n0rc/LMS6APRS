-Toolchain-
We're using COSMIC ST7's toolchain.
It's pretty old.
Quite a bit of contemporary C isn't supported.
There didn't seem to be an open-source toolchain.
Also, double-precision floating point is implemented
as single-precision.

-Simulation-
ST Visual Develop is capable of loading ST7 ELF files
and simulating them. However, it appears that not all
peripherals are supported, but at least GPIOs work and
the simulation of the ST7 core appears to be cycle-accurate.

-Endianness-
Since this is an 8bit CPU, endianness is largely a
toolchain / software problem. The ST7 compiler appears
to represent both multibyte integers and floats as big-endian.

-Types-
char - 8 bits
int - 16 bits
long - 32 bits
long long - does not exist
float - 32 bits
double - 32 bits

-Configuring COSMIC IDE-
Project->Load(lsm6aprs.prj)
Project->WorkingDirectory(this directory)
Build->Build

-Assembly writers-
We're using the COSMIC ST7 ABI.
The first C arg is passed in register x.
The second C arg in register a.
Who would ever want more than three registers anyways?

-Adding a file to the build-
Please add new C files to both Build.bat and lsm6aprs.prj(the IDE control file).

